{
  "contractName": "Token",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "MinterChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "itemPrices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "NFTApp",
          "type": "address"
        }
      ],
      "name": "passMinterRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"MinterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"itemPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"NFTApp\",\"type\":\"address\"}],\"name\":\"passMinterRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/Token.sol\":\"Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd6b90e604fb2eb2d641c7110c72440bf2dc999ec6ab8ff60f200e71ca75d1d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b92d8ab83b21ff984b1f0d6d66897d5afb1f2052004cbcb133cea023e0ae468\",\"dweb:/ipfs/QmTarypkQrFp4UMjTh7Zzhz2nZLz5uPS4nJQtHDEuwBVe6\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xe7fff2c63a8ae715484391eb8626588e27194d7b5b1bf4b60e413b7e1f84b3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0712ac4fd76480553208b1a85e88333d909f87f58df9679e0672df2ac1e93450\",\"dweb:/ipfs/Qmbj7gRTwzkvGvF4dcyFz6zjXEXNZsQCvvEha5RCK2mEtt\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x61321d2c86346045bf394885ee3afeecc65f9daad2694bc19110967588fd7b5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1703b877203e0447ede72dcf73f1c4f2089b415bd1c44877904128a64fafed5b\",\"dweb:/ipfs/QmaZoYDo2FWtKcwCc9zuabU6zri8KV9xJrhU614d93sLid\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xd918cca1b659f588a6d12d05fd7196179a8b1eac9133d7f77da7ef3133e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c75d578f42e2e2e427b934e6c41cc759be2d0a52155868308e915328c8feb2b\",\"dweb:/ipfs/QmbFNHtWAoNhe82Hy6yKTePWJRczqzp1APSBfLS9XfAN6e\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x2690a9b7f4f7489b8d25a4fc6bffc02ec3971fb41ed6c8b59adef2833bdab07c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8148c99452b6793ac9599abdc8bdaf4eeb47f34590beea8aa01089be14e2990c\",\"dweb:/ipfs/QmNdenmZ4EDfH9TuBas3pHeGuZvDNo2rsfgUj6ka8vuH37\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x21662e4254ce4ac8570b30cc7ab31435966b3cb778a56ba4d09276881cfb2437\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acce8fe6adc670f9987a8b6aedc4cc0abcd0dcd2e152d649a12099d735bd7bad\",\"dweb:/ipfs/QmXAk17oK3daBmA8CGyVcU56L496jW3U6Ef1WkfHyB1JAV\"]},\"project:/src/contracts/Token.sol\":{\"keccak256\":\"0x6c69e30930086a2831cade0b82a2c230e42137a1265bdd74e8d0f879976a1be1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://766601120ba574ceddfcccfd3b2b2585ee7714f1fb69eb182440bf2fd6e655f4\",\"dweb:/ipfs/QmWy5Bqk9Dsjb2WDjqfXvU2UD7BpRivvQ6BAST2LpXYK7N\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051806020016040528060008152506200003a6301ffc9a760e01b620000c360201b60201c565b6200004b81620001cc60201b60201c565b6200006363d9b67a2660e01b620000c360201b60201c565b6200007b630e89341c60e01b620000c360201b60201c565b5033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200029e565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000160576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b8060039080519060200190620001e4929190620001e8565b5050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200022057600085556200026c565b82601f106200023b57805160ff19168380011785556200026c565b828001600101855582156200026c579182015b828111156200026b5782518255916020019190600101906200024e565b5b5090506200027b91906200027f565b5090565b5b808211156200029a57600081600090555060010162000280565b5090565b6123af80620002ae6000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c80634e1273f4116100715780634e1273f414610470578063a22cb46514610611578063bf91ad9e14610661578063d7fc5b15146106a3578063e985e9c5146106fd578063f242432a14610777576100a8565b8062fdd58e146100ad57806301ffc9a71461010f57806307546172146101725780630e89341c146101a65780632eb2c2d61461024d575b600080fd5b6100f9600480360360408110156100c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610886565b6040518082815260200191505060405180910390f35b61015a6004803603602081101561012557600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610966565b60405180821515815260200191505060405180910390f35b61017a6109cd565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101d2600480360360208110156101bc57600080fd5b81019080803590602001909291905050506109f3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102125780820151818401526020810190506101f7565b50505050905090810190601f16801561023f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61046e600480360360a081101561026357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102c057600080fd5b8201836020820111156102d257600080fd5b803590602001918460208302840111640100000000831117156102f457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561035457600080fd5b82018360208201111561036657600080fd5b8035906020019184602083028401116401000000008311171561038857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103e857600080fd5b8201836020820111156103fa57600080fd5b8035906020019184600183028401116401000000008311171561041c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610a97565b005b6105ba6004803603604081101561048657600080fd5b81019080803590602001906401000000008111156104a357600080fd5b8201836020820111156104b557600080fd5b803590602001918460208302840111640100000000831117156104d757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561053757600080fd5b82018360208201111561054957600080fd5b8035906020019184602083028401116401000000008311171561056b57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610f22565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156105fd5780820151818401526020810190506105e2565b505050509050019250505060405180910390f35b61065f6004803603604081101561062757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611114565b005b61068d6004803603602081101561067757600080fd5b81019080803590602001909291905050506112ad565b6040518082815260200191505060405180910390f35b6106e5600480360360208110156106b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112c5565b60405180821515815260200191505060405180910390f35b61075f6004803603604081101561071357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061141b565b60405180821515815260200191505060405180910390f35b610884600480360360a081101561078d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001906401000000008111156107fe57600080fd5b82018360208201111561081057600080fd5b8035906020019184600183028401116401000000008311171561083257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114af565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806121cd602b913960400191505060405180910390fd5b6001600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a8b5780601f10610a6057610100808354040283529160200191610a8b565b820191906000526020600020905b815481529060010190602001808311610a6e57829003601f168201915b50505050509050919050565b8151835114610af1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806123256028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610b77576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806122526025913960400191505060405180910390fd5b610b7f611824565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480610bc55750610bc485610bbf611824565b61141b565b5b610c1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806122776032913960400191505060405180910390fd5b6000610c24611824565b9050610c3481878787878761182c565b60005b8451811015610e05576000858281518110610c4e57fe5b602002602001015190506000858381518110610c6657fe5b60200260200101519050610ced816040518060600160405280602a81526020016122a9602a91396001600086815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118349092919063ffffffff16565b6001600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610da4816001600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118f490919063ffffffff16565b6001600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050806001019050610c37565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610eb5578082015181840152602081019050610e9a565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015610ef7578082015181840152602081019050610edc565b5050505090500194505050505060405180910390a4610f1a81878787878761197c565b505050505050565b60608151835114610f7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806122fc6029913960400191505060405180910390fd5b6000835167ffffffffffffffff81118015610f9857600080fd5b50604051908082528060200260200182016040528015610fc75781602001602082028036833780820191505090505b50905060005b845181101561110957600073ffffffffffffffffffffffffffffffffffffffff16858281518110610ffa57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16141561106f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806121f86031913960400191505060405180910390fd5b6001600085838151811061107f57fe5b6020026020010151815260200190815260200160002060008683815181106110a357fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548282815181106110f257fe5b602002602001018181525050806001019050610fcd565b508091505092915050565b8173ffffffffffffffffffffffffffffffffffffffff16611133611824565b73ffffffffffffffffffffffffffffffffffffffff1614156111a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806122d36029913960400191505060405180910390fd5b80600260006111ad611824565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661125a611824565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b60046020528060005260406000206000915090505481565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461136d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d81526020018061234d602d913960400191505060405180910390fd5b81600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f683604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a260019050919050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611535576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806122526025913960400191505060405180910390fd5b61153d611824565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061158357506115828561157d611824565b61141b565b5b6115d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806122296029913960400191505060405180910390fd5b60006115e2611824565b90506116028187876115f388611d0b565b6115fc88611d0b565b8761182c565b61167f836040518060600160405280602a81526020016122a9602a91396001600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118349092919063ffffffff16565b6001600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611736836001600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118f490919063ffffffff16565b6001600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a461181c818787878787611d7c565b505050505050565b600033905090565b505050505050565b60008383111582906118e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118a657808201518184015260208101905061188b565b50505050905090810190601f1680156118d35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015611972576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b61199b8473ffffffffffffffffffffffffffffffffffffffff16612089565b15611d03578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015611a53578082015181840152602081019050611a38565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015611a95578082015181840152602081019050611a7a565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015611ad4578082015181840152602081019050611ab9565b50505050905090810190601f168015611b015780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015611b2657600080fd5b505af1925050508015611b5a57506040513d6020811015611b4657600080fd5b810190808051906020019092919050505060015b611c6457611b666120ba565b80611b715750611c13565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611bd8578082015181840152602081019050611bbd565b50505050905090810190601f168015611c055780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806121716034913960400191505060405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611d01576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806121a56028913960400191505060405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff81118015611d2757600080fd5b50604051908082528060200260200182016040528015611d565781602001602082028036833780820191505090505b5090508281600081518110611d6757fe5b60200260200101818152505080915050919050565b611d9b8473ffffffffffffffffffffffffffffffffffffffff16612089565b15612081578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611e54578082015181840152602081019050611e39565b50505050905090810190601f168015611e815780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015611ea457600080fd5b505af1925050508015611ed857506040513d6020811015611ec457600080fd5b810190808051906020019092919050505060015b611fe257611ee46120ba565b80611eef5750611f91565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f56578082015181840152602081019050611f3b565b50505050905090810190601f168015611f835780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806121716034913960400191505060405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461207f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806121a56028913960400191505060405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b6000601f19601f8301169050919050565b60008160e01c9050919050565b600060443d10156120ca5761216d565b60046000803e6120db6000516120ad565b6308c379a081146120ec575061216d565b60405160043d036004823e80513d602482011167ffffffffffffffff821117156121185750505061216d565b808201805167ffffffffffffffff81111561213757505050505061216d565b8060208301013d85018111156121525750505050505061216d565b61215b8261209c565b60208401016040528296505050505050505b9056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d617463684572726f722c206f6e6c79206f776e65722063616e206368616e67652070617373206d696e74657220726f6c65a2646970667358221220435826ab1b52736d73d2b119475ffe3c4486d46eeae523c68433b3a386a0a1d864736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a85760003560e01c80634e1273f4116100715780634e1273f414610470578063a22cb46514610611578063bf91ad9e14610661578063d7fc5b15146106a3578063e985e9c5146106fd578063f242432a14610777576100a8565b8062fdd58e146100ad57806301ffc9a71461010f57806307546172146101725780630e89341c146101a65780632eb2c2d61461024d575b600080fd5b6100f9600480360360408110156100c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610886565b6040518082815260200191505060405180910390f35b61015a6004803603602081101561012557600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610966565b60405180821515815260200191505060405180910390f35b61017a6109cd565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101d2600480360360208110156101bc57600080fd5b81019080803590602001909291905050506109f3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102125780820151818401526020810190506101f7565b50505050905090810190601f16801561023f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61046e600480360360a081101561026357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102c057600080fd5b8201836020820111156102d257600080fd5b803590602001918460208302840111640100000000831117156102f457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561035457600080fd5b82018360208201111561036657600080fd5b8035906020019184602083028401116401000000008311171561038857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103e857600080fd5b8201836020820111156103fa57600080fd5b8035906020019184600183028401116401000000008311171561041c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610a97565b005b6105ba6004803603604081101561048657600080fd5b81019080803590602001906401000000008111156104a357600080fd5b8201836020820111156104b557600080fd5b803590602001918460208302840111640100000000831117156104d757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561053757600080fd5b82018360208201111561054957600080fd5b8035906020019184602083028401116401000000008311171561056b57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610f22565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156105fd5780820151818401526020810190506105e2565b505050509050019250505060405180910390f35b61065f6004803603604081101561062757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611114565b005b61068d6004803603602081101561067757600080fd5b81019080803590602001909291905050506112ad565b6040518082815260200191505060405180910390f35b6106e5600480360360208110156106b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112c5565b60405180821515815260200191505060405180910390f35b61075f6004803603604081101561071357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061141b565b60405180821515815260200191505060405180910390f35b610884600480360360a081101561078d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001906401000000008111156107fe57600080fd5b82018360208201111561081057600080fd5b8035906020019184600183028401116401000000008311171561083257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114af565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806121cd602b913960400191505060405180910390fd5b6001600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a8b5780601f10610a6057610100808354040283529160200191610a8b565b820191906000526020600020905b815481529060010190602001808311610a6e57829003601f168201915b50505050509050919050565b8151835114610af1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806123256028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610b77576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806122526025913960400191505060405180910390fd5b610b7f611824565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480610bc55750610bc485610bbf611824565b61141b565b5b610c1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806122776032913960400191505060405180910390fd5b6000610c24611824565b9050610c3481878787878761182c565b60005b8451811015610e05576000858281518110610c4e57fe5b602002602001015190506000858381518110610c6657fe5b60200260200101519050610ced816040518060600160405280602a81526020016122a9602a91396001600086815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118349092919063ffffffff16565b6001600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610da4816001600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118f490919063ffffffff16565b6001600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050806001019050610c37565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610eb5578082015181840152602081019050610e9a565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015610ef7578082015181840152602081019050610edc565b5050505090500194505050505060405180910390a4610f1a81878787878761197c565b505050505050565b60608151835114610f7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806122fc6029913960400191505060405180910390fd5b6000835167ffffffffffffffff81118015610f9857600080fd5b50604051908082528060200260200182016040528015610fc75781602001602082028036833780820191505090505b50905060005b845181101561110957600073ffffffffffffffffffffffffffffffffffffffff16858281518110610ffa57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16141561106f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806121f86031913960400191505060405180910390fd5b6001600085838151811061107f57fe5b6020026020010151815260200190815260200160002060008683815181106110a357fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548282815181106110f257fe5b602002602001018181525050806001019050610fcd565b508091505092915050565b8173ffffffffffffffffffffffffffffffffffffffff16611133611824565b73ffffffffffffffffffffffffffffffffffffffff1614156111a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806122d36029913960400191505060405180910390fd5b80600260006111ad611824565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661125a611824565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b60046020528060005260406000206000915090505481565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461136d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d81526020018061234d602d913960400191505060405180910390fd5b81600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f683604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a260019050919050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611535576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806122526025913960400191505060405180910390fd5b61153d611824565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061158357506115828561157d611824565b61141b565b5b6115d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806122296029913960400191505060405180910390fd5b60006115e2611824565b90506116028187876115f388611d0b565b6115fc88611d0b565b8761182c565b61167f836040518060600160405280602a81526020016122a9602a91396001600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118349092919063ffffffff16565b6001600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611736836001600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118f490919063ffffffff16565b6001600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a461181c818787878787611d7c565b505050505050565b600033905090565b505050505050565b60008383111582906118e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118a657808201518184015260208101905061188b565b50505050905090810190601f1680156118d35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015611972576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b61199b8473ffffffffffffffffffffffffffffffffffffffff16612089565b15611d03578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015611a53578082015181840152602081019050611a38565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015611a95578082015181840152602081019050611a7a565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015611ad4578082015181840152602081019050611ab9565b50505050905090810190601f168015611b015780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015611b2657600080fd5b505af1925050508015611b5a57506040513d6020811015611b4657600080fd5b810190808051906020019092919050505060015b611c6457611b666120ba565b80611b715750611c13565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611bd8578082015181840152602081019050611bbd565b50505050905090810190601f168015611c055780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806121716034913960400191505060405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611d01576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806121a56028913960400191505060405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff81118015611d2757600080fd5b50604051908082528060200260200182016040528015611d565781602001602082028036833780820191505090505b5090508281600081518110611d6757fe5b60200260200101818152505080915050919050565b611d9b8473ffffffffffffffffffffffffffffffffffffffff16612089565b15612081578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611e54578082015181840152602081019050611e39565b50505050905090810190601f168015611e815780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015611ea457600080fd5b505af1925050508015611ed857506040513d6020811015611ec457600080fd5b810190808051906020019092919050505060015b611fe257611ee46120ba565b80611eef5750611f91565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f56578082015181840152602081019050611f3b565b50505050905090810190601f168015611f835780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806121716034913960400191505060405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461207f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806121a56028913960400191505060405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b6000601f19601f8301169050919050565b60008160e01c9050919050565b600060443d10156120ca5761216d565b60046000803e6120db6000516120ad565b6308c379a081146120ec575061216d565b60405160043d036004823e80513d602482011167ffffffffffffffff821117156121185750505061216d565b808201805167ffffffffffffffff81111561213757505050505061216d565b8060208301013d85018111156121525750505050505061216d565b61215b8261209c565b60208401016040528296505050505050505b9056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d617463684572726f722c206f6e6c79206f776e65722063616e206368616e67652070617373206d696e74657220726f6c65a2646970667358221220435826ab1b52736d73d2b119475ffe3c4486d46eeae523c68433b3a386a0a1d864736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1063:13",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "55:54:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "65:38:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "83:5:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "90:2:13",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "79:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:14:13"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "99:2:13",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "95:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "95:7:13"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "75:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "75:28:13"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "65:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "38:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "48:6:13",
                "type": ""
              }
            ],
            "src": "7:102:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "168:53:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "178:36:13",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "203:3:13",
                        "type": "",
                        "value": "224"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "208:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "199:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "199:15:13"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "178:8:13"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_224_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "149:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "159:8:13",
                "type": ""
              }
            ],
            "src": "115:106:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "270:790:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:9:13",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "312:5:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [],
                        "functionName": {
                          "name": "returndatasize",
                          "nodeType": "YulIdentifier",
                          "src": "286:14:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "286:16:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:4:13",
                        "type": "",
                        "value": "0x44"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "283:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "283:26:13"
                  },
                  "nodeType": "YulIf",
                  "src": "280:2:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "344:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "347:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "350:1:13",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "returndatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "329:14:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "329:23:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "329:23:13"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "361:45:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "403:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "397:5:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "397:8:13"
                      }
                    ],
                    "functionName": {
                      "name": "shift_right_224_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "372:24:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:34:13"
                  },
                  "variables": [
                    {
                      "name": "sig",
                      "nodeType": "YulTypedName",
                      "src": "365:3:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "446:9:13",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "448:5:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "sig",
                            "nodeType": "YulIdentifier",
                            "src": "428:3:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "433:10:13",
                            "type": "",
                            "value": "0x08c379a0"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "425:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "425:19:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "418:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:27:13"
                  },
                  "nodeType": "YulIf",
                  "src": "415:2:13"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "465:21:13",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "483:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "477:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "477:9:13"
                  },
                  "variables": [
                    {
                      "name": "data",
                      "nodeType": "YulTypedName",
                      "src": "469:4:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "510:4:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "516:1:13",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "523:14:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "523:16:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "541:1:13",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "519:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "519:24:13"
                      }
                    ],
                    "functionName": {
                      "name": "returndatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "495:14:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:49:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:49:13"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "554:25:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "574:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "568:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "568:11:13"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "558:6:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "705:29:13",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "719:5:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "610:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "618:18:13",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "607:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "607:30:13"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "658:6:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "666:4:13",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "654:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "654:17:13"
                          },
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "673:14:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "673:16:13"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "651:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "651:39:13"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "591:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "591:113:13"
                  },
                  "nodeType": "YulIf",
                  "src": "588:2:13"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "744:28:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "759:4:13"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "765:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "755:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "755:17:13"
                  },
                  "variables": [
                    {
                      "name": "msg",
                      "nodeType": "YulTypedName",
                      "src": "748:3:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "781:24:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "msg",
                        "nodeType": "YulIdentifier",
                        "src": "801:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "795:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "795:10:13"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "785:6:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "848:9:13",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "850:5:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "820:6:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "828:18:13",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "817:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "817:30:13"
                  },
                  "nodeType": "YulIf",
                  "src": "814:2:13"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "867:38:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "msg",
                            "nodeType": "YulIdentifier",
                            "src": "886:3:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "891:4:13",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "882:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "882:14:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "898:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "878:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "878:27:13"
                  },
                  "variables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "871:3:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "954:9:13",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "956:5:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "920:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "929:4:13"
                          },
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "935:14:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "935:16:13"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "925:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "925:27:13"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "917:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "917:36:13"
                  },
                  "nodeType": "YulIf",
                  "src": "914:2:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "980:2:13",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "msg",
                                "nodeType": "YulIdentifier",
                                "src": "992:3:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "997:4:13",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "988:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "988:14:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1026:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "round_up_to_mul_of_32",
                              "nodeType": "YulIdentifier",
                              "src": "1004:21:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1004:29:13"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "984:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "984:50:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "973:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:62:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "973:62:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1044:10:13",
                  "value": {
                    "name": "msg",
                    "nodeType": "YulIdentifier",
                    "src": "1051:3:13"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1044:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "try_decode_error_message",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "266:3:13",
                "type": ""
              }
            ],
            "src": "227:833:13"
          }
        ]
      },
      "contents": "{\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        returndatacopy(0, 0, 4)\n        let sig := shift_right_224_unsigned(mload(0))\n        if iszero(eq(sig, 0x08c379a0)) { leave }\n\n        let data := mload(64)\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, returndatasize())) { leave }\n\n        mstore(64, add(add(msg, 0x20), round_up_to_mul_of_32(length)))\n        ret := msg\n    }\n\n}\n",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "185:539:12:-:0;;;397:71;;;;;;;;;;1974:354:4;;;;;;;;;;;;768:40:1;435:10;787:20;;768:18;;;:40;;:::i;:::-;2024:13:4;2032:4;2024:7;;;:13;;:::i;:::-;2126:41;1762:10;2145:21;;2126:18;;;:41;;:::i;:::-;2267:54;1914:10;2286:34;;2267:18;;;:54;;:::i;:::-;1974:354;451:10:12::1;442:6;;:19;;;;;;;;;;;;;;;;;;185:539:::0;;1499:198:1;1597:10;1582:25;;:11;:25;;;;;1574:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1686:4;1650:20;:33;1671:11;1650:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1499:198;:::o;7600:86:4:-;7673:6;7666:4;:13;;;;;;;;;;;;:::i;:::-;;7600:86;:::o;185:539:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "185:539:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2966:220:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;965:140:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;310:21:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2727:97:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::ii;:::-;;3343:615;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4026:306;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;258:45:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;482:237;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4399:158:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4624:897;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2966:220;3044:7;3090:1;3071:21;;:7;:21;;;;3063:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3157:9;:13;3167:2;3157:13;;;;;;;;;;;:22;3171:7;3157:22;;;;;;;;;;;;;;;;3150:29;;2966:220;;;;:::o;965:140:1:-;1042:4;1065:20;:33;1086:11;1065:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1058:40;;965:140;;;:::o;310:21:12:-;;;;;;;;;;;;;:::o;2727:97:4:-;2781:13;2813:4;2806:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2727:97;;;:::o;5593:1184::-;5847:7;:14;5833:3;:10;:28;5825:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5938:1;5924:16;;:2;:16;;;;5916:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6021:12;:10;:12::i;:::-;6013:20;;:4;:20;;;:60;;;;6037:36;6054:4;6060:12;:10;:12::i;:::-;6037:16;:36::i;:::-;6013:60;5992:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6160:16;6179:12;:10;:12::i;:::-;6160:31;;6202:60;6223:8;6233:4;6239:2;6243:3;6248:7;6257:4;6202:20;:60::i;:::-;6278:9;6273:349;6297:3;:10;6293:1;:14;6273:349;;;6328:10;6341:3;6345:1;6341:6;;;;;;;;;;;;;;6328:19;;6361:14;6378:7;6386:1;6378:10;;;;;;;;;;;;;;6361:27;;6425:123;6466:6;6425:123;;;;;;;;;;;;;;;;;:9;:13;6435:2;6425:13;;;;;;;;;;;:19;6439:4;6425:19;;;;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;6403:9;:13;6413:2;6403:13;;;;;;;;;;;:19;6417:4;6403:19;;;;;;;;;;;;;;;:145;;;;6582:29;6604:6;6582:9;:13;6592:2;6582:13;;;;;;;;;;;:17;6596:2;6582:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;6562:9;:13;6572:2;6562:13;;;;;;;;;;;:17;6576:2;6562:17;;;;;;;;;;;;;;;:49;;;;6273:349;;6309:3;;;;;6273:349;;;;6667:2;6637:47;;6661:4;6637:47;;6651:8;6637:47;;;6671:3;6676:7;6637:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6695:75;6731:8;6741:4;6747:2;6751:3;6756:7;6765:4;6695:35;:75::i;:::-;5593:1184;;;;;;:::o;3343:615::-;3500:16;3559:3;:10;3540:8;:15;:29;3532:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3626:30;3673:8;:15;3659:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3626:63;;3705:9;3700:221;3724:8;:15;3720:1;:19;3700:221;;;3791:1;3768:25;;:8;3777:1;3768:11;;;;;;;;;;;;;;:25;;;;3760:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3880:9;:17;3890:3;3894:1;3890:6;;;;;;;;;;;;;;3880:17;;;;;;;;;;;:30;3898:8;3907:1;3898:11;;;;;;;;;;;;;;3880:30;;;;;;;;;;;;;;;;3861:13;3875:1;3861:16;;;;;;;;;;;;;:49;;;;;3741:3;;;;;3700:221;;;;3938:13;3931:20;;;3343:615;;;;:::o;4026:306::-;4144:8;4128:24;;:12;:10;:12::i;:::-;:24;;;;4120:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4254:8;4209:18;:32;4228:12;:10;:12::i;:::-;4209:32;;;;;;;;;;;;;;;:42;4242:8;4209:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;4306:8;4277:48;;4292:12;:10;:12::i;:::-;4277:48;;;4316:8;4277:48;;;;;;;;;;;;;;;;;;;;4026:306;;:::o;258:45:12:-;;;;;;;;;;;;;;;;;:::o;482:237::-;537:4;572:6;;;;;;;;;;;558:20;;:10;:20;;;550:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:6;635;;:15;;;;;;;;;;;;;;;;;;676:10;662:33;;;688:6;662:33;;;;;;;;;;;;;;;;;;;;709:4;702:11;;482:237;;;:::o;4399:158:4:-;4490:4;4513:18;:27;4532:7;4513:27;;;;;;;;;;;;;;;:37;4541:8;4513:37;;;;;;;;;;;;;;;;;;;;;;;;;4506:44;;4399:158;;;;:::o;4624:897::-;4853:1;4839:16;;:2;:16;;;;4831:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4936:12;:10;:12::i;:::-;4928:20;;:4;:20;;;:60;;;;4952:36;4969:4;4975:12;:10;:12::i;:::-;4952:16;:36::i;:::-;4928:60;4907:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5066:16;5085:12;:10;:12::i;:::-;5066:31;;5108:96;5129:8;5139:4;5145:2;5149:21;5167:2;5149:17;:21::i;:::-;5172:25;5190:6;5172:17;:25::i;:::-;5199:4;5108:20;:96::i;:::-;5237:77;5261:6;5237:77;;;;;;;;;;;;;;;;;:9;:13;5247:2;5237:13;;;;;;;;;;;:19;5251:4;5237:19;;;;;;;;;;;;;;;;:23;;:77;;;;;:::i;:::-;5215:9;:13;5225:2;5215:13;;;;;;;;;;;:19;5229:4;5215:19;;;;;;;;;;;;;;;:99;;;;5344:29;5366:6;5344:9;:13;5354:2;5344:13;;;;;;;;;;;:17;5358:2;5344:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;5324:9;:13;5334:2;5324:13;;;;;;;;;;;:17;5338:2;5324:17;;;;;;;;;;;;;;;:49;;;;5420:2;5389:46;;5414:4;5389:46;;5404:8;5389:46;;;5424:2;5428:6;5389:46;;;;;;;;;;;;;;;;;;;;;;;;5446:68;5477:8;5487:4;5493:2;5497;5501:6;5509:4;5446:30;:68::i;:::-;4624:897;;;;;;:::o;598:104:0:-;651:15;685:10;678:17;;598:104;:::o;12306:227:4:-;;;;;;;:::o;1754:187:3:-;1840:7;1872:1;1867;:6;;1875:12;1859:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1898:9;1914:1;1910;:5;1898:17;;1933:1;1926:8;;;1754:187;;;;;:::o;882:176::-;940:7;959:9;975:1;971;:5;959:17;;999:1;994;:6;;986:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;1043:8;;;882:176;;;;:::o;13286:778:4:-;13530:15;:2;:13;;;:15::i;:::-;13526:532;;;13582:2;13565:43;;;13609:8;13619:4;13625:3;13630:7;13639:4;13565:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13561:487;;;;:::i;:::-;;;;;;;;13924:6;13917:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13561:487;13971:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13561:487;13705:52;;;13693:64;;;:8;:64;;;;13689:161;;13781:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13689:161;13645:219;13526:532;13286:778;;;;;;:::o;14070:193::-;14136:16;14164:22;14203:1;14189:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14164:41;;14226:7;14215:5;14221:1;14215:8;;;;;;;;;;;;;:18;;;;;14251:5;14244:12;;;14070:193;;;:::o;12539:741::-;12758:15;:2;:13;;;:15::i;:::-;12754:520;;;12810:2;12793:38;;;12832:8;12842:4;12848:2;12852:6;12860:4;12793:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12789:475;;;;:::i;:::-;;;;;;;;13140:6;13133:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12789:475;13187:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12789:475;12926:47;;;12914:59;;;:8;:59;;;;12910:156;;12997:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12910:156;12866:214;12754:520;12539:741;;;;;;:::o;726:413:8:-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;7:102:13:-;;99:2;95:7;90:2;83:5;79:14;75:28;65:38;;55:54;;;:::o;115:106::-;;208:5;203:3;199:15;178:36;;168:53;;;:::o;227:833::-;;304:4;286:16;283:26;280:2;;;312:5;;280:2;350:1;347;344;329:23;372:34;403:1;397:8;372:34;:::i;:::-;433:10;428:3;425:19;415:2;;448:5;;;415:2;483;477:9;541:1;523:16;519:24;516:1;510:4;495:49;574:4;568:11;673:16;666:4;658:6;654:17;651:39;618:18;610:6;607:30;591:113;588:2;;;719:5;;;;;588:2;765:6;759:4;755:17;801:3;795:10;828:18;820:6;817:30;814:2;;;850:5;;;;;;;814:2;898:6;891:4;886:3;882:14;878:27;935:16;929:4;925:27;920:3;917:36;914:2;;;956:5;;;;;;;;914:2;1004:29;1026:6;1004:29;:::i;:::-;997:4;992:3;988:14;984:50;980:2;973:62;1051:3;1044:10;;270:790;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\n\r\ncontract Token is ERC1155 {\r\n   using Counters for Counters.Counter;\r\n   mapping(uint256 => uint256) public itemPrices;\r\n\r\n  address public minter;\r\n  event MinterChanged(address indexed from, address to);\r\n\r\n   constructor() public ERC1155(\"\") {\r\n         minter = msg.sender;\r\n   }\r\n\r\n   \r\n     function passMinterRole(address NFTApp) public returns(bool) {\r\n    require(msg.sender == minter, \"Error, only owner can change pass minter role\");\r\n    minter = NFTApp;\r\n    emit MinterChanged(msg.sender, NFTApp);\r\n    return true;\r\n  }\r\n\r\n}",
  "sourcePath": "D:\\DOSYALARIM\\Kodlar\\ItemMarket\\src\\contracts\\Token.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/Token.sol",
    "exportedSymbols": {
      "Address": [
        1730
      ],
      "Context": [
        22
      ],
      "Counters": [
        1780
      ],
      "ERC1155": [
        1308
      ],
      "ERC165": [
        79
      ],
      "IERC1155": [
        1430
      ],
      "IERC1155MetadataURI": [
        1445
      ],
      "IERC1155Receiver": [
        1486
      ],
      "IERC165": [
        91
      ],
      "SafeMath": [
        287
      ],
      "Token": [
        1878
      ]
    },
    "id": 1879,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1818,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:12"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "id": 1819,
        "nodeType": "ImportDirective",
        "scope": 1879,
        "sourceUnit": 1309,
        "src": "68:59:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 1820,
        "nodeType": "ImportDirective",
        "scope": 1879,
        "sourceUnit": 1781,
        "src": "129:52:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1821,
              "name": "ERC1155",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1308,
              "src": "203:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155_$1308",
                "typeString": "contract ERC1155"
              }
            },
            "id": 1822,
            "nodeType": "InheritanceSpecifier",
            "src": "203:7:12"
          }
        ],
        "contractDependencies": [
          22,
          79,
          91,
          1308,
          1430,
          1445
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1878,
        "linearizedBaseContracts": [
          1878,
          1308,
          1445,
          1430,
          79,
          91,
          22
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1825,
            "libraryName": {
              "id": 1823,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1780,
              "src": "223:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$1780",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "217:36:12",
            "typeName": {
              "id": 1824,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1740,
              "src": "236:16:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1740_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "bf91ad9e",
            "id": 1829,
            "mutability": "mutable",
            "name": "itemPrices",
            "nodeType": "VariableDeclaration",
            "scope": 1878,
            "src": "258:45:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1828,
              "keyType": {
                "id": 1826,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "266:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "258:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1827,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "277:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "07546172",
            "id": 1831,
            "mutability": "mutable",
            "name": "minter",
            "nodeType": "VariableDeclaration",
            "scope": 1878,
            "src": "310:21:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1830,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "310:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1837,
            "name": "MinterChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1833,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1837,
                  "src": "356:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "356:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1835,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1837,
                  "src": "378:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "378:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "355:34:12"
            },
            "src": "336:54:12"
          },
          {
            "body": {
              "id": 1848,
              "nodeType": "Block",
              "src": "430:38:12",
              "statements": [
                {
                  "expression": {
                    "id": 1846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1843,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1831,
                      "src": "442:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1844,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "451:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "451:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "442:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1847,
                  "nodeType": "ExpressionStatement",
                  "src": "442:19:12"
                }
              ]
            },
            "id": 1849,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "",
                    "id": 1840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "426:2:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  }
                ],
                "id": 1841,
                "modifierName": {
                  "id": 1839,
                  "name": "ERC1155",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1308,
                  "src": "418:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC1155_$1308_$",
                    "typeString": "type(contract ERC1155)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "418:11:12"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:2:12"
            },
            "returnParameters": {
              "id": 1842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "430:0:12"
            },
            "scope": 1878,
            "src": "397:71:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1876,
              "nodeType": "Block",
              "src": "543:176:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1857,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "558:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "558:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1859,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1831,
                          "src": "572:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "558:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f722c206f6e6c79206f776e65722063616e206368616e67652070617373206d696e74657220726f6c65",
                        "id": 1861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "580:47:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f121547d76d619bc8eb5d4a0dbb4206e4881c0dc7279c672c02a84a622d94438",
                          "typeString": "literal_string \"Error, only owner can change pass minter role\""
                        },
                        "value": "Error, only owner can change pass minter role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f121547d76d619bc8eb5d4a0dbb4206e4881c0dc7279c672c02a84a622d94438",
                          "typeString": "literal_string \"Error, only owner can change pass minter role\""
                        }
                      ],
                      "id": 1856,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "550:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "550:78:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1863,
                  "nodeType": "ExpressionStatement",
                  "src": "550:78:12"
                },
                {
                  "expression": {
                    "id": 1866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1864,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1831,
                      "src": "635:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1865,
                      "name": "NFTApp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1851,
                      "src": "644:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "635:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1867,
                  "nodeType": "ExpressionStatement",
                  "src": "635:15:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1869,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "676:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "676:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1871,
                        "name": "NFTApp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1851,
                        "src": "688:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1868,
                      "name": "MinterChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1837,
                      "src": "662:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "662:33:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1873,
                  "nodeType": "EmitStatement",
                  "src": "657:38:12"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "709:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1855,
                  "id": 1875,
                  "nodeType": "Return",
                  "src": "702:11:12"
                }
              ]
            },
            "functionSelector": "d7fc5b15",
            "id": 1877,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "passMinterRole",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1851,
                  "mutability": "mutable",
                  "name": "NFTApp",
                  "nodeType": "VariableDeclaration",
                  "scope": 1877,
                  "src": "506:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "505:16:12"
            },
            "returnParameters": {
              "id": 1855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1854,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1877,
                  "src": "537:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1853,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "536:6:12"
            },
            "scope": 1878,
            "src": "482:237:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1879,
        "src": "185:539:12"
      }
    ],
    "src": "33:691:12"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/src/contracts/Token.sol",
      "exportedSymbols": {
        "Address": [
          1730
        ],
        "Context": [
          22
        ],
        "Counters": [
          1780
        ],
        "ERC1155": [
          1308
        ],
        "ERC165": [
          79
        ],
        "IERC1155": [
          1430
        ],
        "IERC1155MetadataURI": [
          1445
        ],
        "IERC1155Receiver": [
          1486
        ],
        "IERC165": [
          91
        ],
        "SafeMath": [
          287
        ],
        "Token": [
          1878
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".0",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 1818,
        "name": "PragmaDirective",
        "src": "33:31:12"
      },
      {
        "attributes": {
          "SourceUnit": 1309,
          "absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
          "file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
          "scope": 1879,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1819,
        "name": "ImportDirective",
        "src": "68:59:12"
      },
      {
        "attributes": {
          "SourceUnit": 1781,
          "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
          "file": "@openzeppelin/contracts/utils/Counters.sol",
          "scope": 1879,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1820,
        "name": "ImportDirective",
        "src": "129:52:12"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            22,
            79,
            91,
            1308,
            1430,
            1445
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1878,
            1308,
            1445,
            1430,
            79,
            91,
            22
          ],
          "name": "Token",
          "scope": 1879
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC1155",
                  "referencedDeclaration": 1308,
                  "type": "contract ERC1155"
                },
                "id": 1821,
                "name": "UserDefinedTypeName",
                "src": "203:7:12"
              }
            ],
            "id": 1822,
            "name": "InheritanceSpecifier",
            "src": "203:7:12"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "Counters",
                  "referencedDeclaration": 1780,
                  "type": "library Counters"
                },
                "id": 1823,
                "name": "UserDefinedTypeName",
                "src": "223:8:12"
              },
              {
                "attributes": {
                  "name": "Counters.Counter",
                  "referencedDeclaration": 1740,
                  "type": "struct Counters.Counter"
                },
                "id": 1824,
                "name": "UserDefinedTypeName",
                "src": "236:16:12"
              }
            ],
            "id": 1825,
            "name": "UsingForDirective",
            "src": "217:36:12"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "bf91ad9e",
              "mutability": "mutable",
              "name": "itemPrices",
              "scope": 1878,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => uint256)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1826,
                    "name": "ElementaryTypeName",
                    "src": "266:7:12"
                  },
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1827,
                    "name": "ElementaryTypeName",
                    "src": "277:7:12"
                  }
                ],
                "id": 1828,
                "name": "Mapping",
                "src": "258:27:12"
              }
            ],
            "id": 1829,
            "name": "VariableDeclaration",
            "src": "258:45:12"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "07546172",
              "mutability": "mutable",
              "name": "minter",
              "scope": 1878,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 1830,
                "name": "ElementaryTypeName",
                "src": "310:7:12"
              }
            ],
            "id": 1831,
            "name": "VariableDeclaration",
            "src": "310:21:12"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "MinterChanged"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "from",
                      "scope": 1837,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1832,
                        "name": "ElementaryTypeName",
                        "src": "356:7:12"
                      }
                    ],
                    "id": 1833,
                    "name": "VariableDeclaration",
                    "src": "356:20:12"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 1837,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1834,
                        "name": "ElementaryTypeName",
                        "src": "378:7:12"
                      }
                    ],
                    "id": 1835,
                    "name": "VariableDeclaration",
                    "src": "378:10:12"
                  }
                ],
                "id": 1836,
                "name": "ParameterList",
                "src": "355:34:12"
              }
            ],
            "id": 1837,
            "name": "EventDefinition",
            "src": "336:54:12"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1878,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1838,
                "name": "ParameterList",
                "src": "408:2:12"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1842,
                "name": "ParameterList",
                "src": "430:0:12"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1308,
                      "type": "type(contract ERC1155)",
                      "value": "ERC1155"
                    },
                    "id": 1839,
                    "name": "Identifier",
                    "src": "418:7:12"
                  },
                  {
                    "attributes": {
                      "hexvalue": "",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"\"",
                      "value": ""
                    },
                    "id": 1840,
                    "name": "Literal",
                    "src": "426:2:12"
                  }
                ],
                "id": 1841,
                "name": "ModifierInvocation",
                "src": "418:11:12"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1831,
                              "type": "address",
                              "value": "minter"
                            },
                            "id": 1843,
                            "name": "Identifier",
                            "src": "442:6:12"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1844,
                                "name": "Identifier",
                                "src": "451:3:12"
                              }
                            ],
                            "id": 1845,
                            "name": "MemberAccess",
                            "src": "451:10:12"
                          }
                        ],
                        "id": 1846,
                        "name": "Assignment",
                        "src": "442:19:12"
                      }
                    ],
                    "id": 1847,
                    "name": "ExpressionStatement",
                    "src": "442:19:12"
                  }
                ],
                "id": 1848,
                "name": "Block",
                "src": "430:38:12"
              }
            ],
            "id": 1849,
            "name": "FunctionDefinition",
            "src": "397:71:12"
          },
          {
            "attributes": {
              "functionSelector": "d7fc5b15",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "passMinterRole",
              "scope": 1878,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "NFTApp",
                      "scope": 1877,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1850,
                        "name": "ElementaryTypeName",
                        "src": "506:7:12"
                      }
                    ],
                    "id": 1851,
                    "name": "VariableDeclaration",
                    "src": "506:14:12"
                  }
                ],
                "id": 1852,
                "name": "ParameterList",
                "src": "505:16:12"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1877,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1853,
                        "name": "ElementaryTypeName",
                        "src": "537:4:12"
                      }
                    ],
                    "id": 1854,
                    "name": "VariableDeclaration",
                    "src": "537:4:12"
                  }
                ],
                "id": 1855,
                "name": "ParameterList",
                "src": "536:6:12"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f121547d76d619bc8eb5d4a0dbb4206e4881c0dc7279c672c02a84a622d94438",
                                  "typeString": "literal_string \"Error, only owner can change pass minter role\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1856,
                            "name": "Identifier",
                            "src": "550:7:12"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1857,
                                    "name": "Identifier",
                                    "src": "558:3:12"
                                  }
                                ],
                                "id": 1858,
                                "name": "MemberAccess",
                                "src": "558:10:12"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1831,
                                  "type": "address",
                                  "value": "minter"
                                },
                                "id": 1859,
                                "name": "Identifier",
                                "src": "572:6:12"
                              }
                            ],
                            "id": 1860,
                            "name": "BinaryOperation",
                            "src": "558:20:12"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4572726f722c206f6e6c79206f776e65722063616e206368616e67652070617373206d696e74657220726f6c65",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Error, only owner can change pass minter role\"",
                              "value": "Error, only owner can change pass minter role"
                            },
                            "id": 1861,
                            "name": "Literal",
                            "src": "580:47:12"
                          }
                        ],
                        "id": 1862,
                        "name": "FunctionCall",
                        "src": "550:78:12"
                      }
                    ],
                    "id": 1863,
                    "name": "ExpressionStatement",
                    "src": "550:78:12"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1831,
                              "type": "address",
                              "value": "minter"
                            },
                            "id": 1864,
                            "name": "Identifier",
                            "src": "635:6:12"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1851,
                              "type": "address",
                              "value": "NFTApp"
                            },
                            "id": 1865,
                            "name": "Identifier",
                            "src": "644:6:12"
                          }
                        ],
                        "id": 1866,
                        "name": "Assignment",
                        "src": "635:15:12"
                      }
                    ],
                    "id": 1867,
                    "name": "ExpressionStatement",
                    "src": "635:15:12"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1837,
                              "type": "function (address,address)",
                              "value": "MinterChanged"
                            },
                            "id": 1868,
                            "name": "Identifier",
                            "src": "662:13:12"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1869,
                                "name": "Identifier",
                                "src": "676:3:12"
                              }
                            ],
                            "id": 1870,
                            "name": "MemberAccess",
                            "src": "676:10:12"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1851,
                              "type": "address",
                              "value": "NFTApp"
                            },
                            "id": 1871,
                            "name": "Identifier",
                            "src": "688:6:12"
                          }
                        ],
                        "id": 1872,
                        "name": "FunctionCall",
                        "src": "662:33:12"
                      }
                    ],
                    "id": 1873,
                    "name": "EmitStatement",
                    "src": "657:38:12"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 1855
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 1874,
                        "name": "Literal",
                        "src": "709:4:12"
                      }
                    ],
                    "id": 1875,
                    "name": "Return",
                    "src": "702:11:12"
                  }
                ],
                "id": 1876,
                "name": "Block",
                "src": "543:176:12"
              }
            ],
            "id": 1877,
            "name": "FunctionDefinition",
            "src": "482:237:12"
          }
        ],
        "id": 1878,
        "name": "ContractDefinition",
        "src": "185:539:12"
      }
    ],
    "id": 1879,
    "name": "SourceUnit",
    "src": "33:691:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-07T08:09:45.940Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}